{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@angular/router/router.d.ts.ÉµEmptyOutletComponent.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.server.module.ts","webpack:///./src/app/comp-1/comp-1.component.html","webpack:///./src/app/comp-1/comp-1.component.ts","webpack:///./src/app/comp-2/comp-2.component.html","webpack:///./src/app/comp-2/comp-2.component.ts","webpack:///./src/app/html-content/html-content.comp.html","webpack:///./src/app/html-content/html-content.comp.ts","webpack:///./src/app/main-root/main-root.component.html","webpack:///./src/app/main-root/main-root.component.ts","webpack:///./src/app/services/cms.services.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.server.ts","webpack:///external \"@angular/animations\"","webpack:///external \"@angular/animations/browser\"","webpack:///external \"@angular/common\"","webpack:///external \"@angular/common/http\"","webpack:///external \"@angular/core\"","webpack:///external \"@angular/elements\"","webpack:///external \"@angular/forms\"","webpack:///external \"@angular/http\"","webpack:///external \"@angular/platform-browser\"","webpack:///external \"@angular/platform-browser/animations\"","webpack:///external \"@angular/platform-server\"","webpack:///external \"@angular/router\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { Comp1 } from \"./comp-1/comp-1.component\";\nimport {MainRootComponent} from \"./main-root/main-root.component\";\n\nconst routes: Routes = [\n    {\n        path: \"home\",\n        component: Comp1\n\n    },\n    {\n        path: \"**\",\n        component: MainRootComponent\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n/*\n\n    {\n        path: 'courses/:id',\n        component: CourseComponent,\n        resolve: {\n            course: CourseResolver\n        }\n    },\n*/","<router-outlet></router-outlet>\n\n\n","import {Component} from '@angular/core';\n\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n\n}\n","import {BrowserModule, BrowserTransferStateModule} from '@angular/platform-browser';\nimport {NgModule, Injector, PLATFORM_ID, Inject } from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport { Comp1 } from \"./comp-1/comp-1.component\";\nimport { Comp2 } from \"./comp-2/comp-2.component\";\nimport {MainRootComponent} from \"./main-root/main-root.component\";\nimport { isPlatformBrowser } from '@angular/common';\n\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport { HttpClientModule} from '@angular/common/http';\nimport { CMSService } from './services/cms.services';\nimport { HtmlContentComponent } from './html-content/html-content.comp';\n\ndeclare var require: any;\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        Comp1,\n        Comp2,\n        HtmlContentComponent,\n        MainRootComponent\n    ],\n    imports: [\n        BrowserModule.withServerTransition({ appId: 'serverApp' }),\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        BrowserTransferStateModule\n    ],\n    providers: [\n        CMSService\n    ],\n    bootstrap: [AppComponent],\n    entryComponents: [AppComponent, MainRootComponent, Comp1, Comp2, HtmlContentComponent]\n})\nexport class AppModule {\n    constructor(private injector: Injector, @Inject(PLATFORM_ID) platformId: Object) {\n\n        if (isPlatformBrowser(platformId)) {\n          const { createCustomElement } = require('@angular/elements');\n          // you can use createCustomElement here\n          const homeElement = createCustomElement(Comp1, { injector });\n    \n          customElements.define('home-comp', homeElement);\n        }\n    \n      }\n    \n      ngDoBootstrap() { }\n}\n","import { NgModule, Injector, PLATFORM_ID, Inject } from '@angular/core';\nimport { ServerModule, ServerTransferStateModule } from '@angular/platform-server';\n\nimport { AppModule } from './app.module';\nimport { AppComponent } from './app.component';\nimport { isPlatformBrowser } from '@angular/common';\n\ndeclare var require: any;\n\n@NgModule({\n  imports: [\n    AppModule,\n    ServerModule,\n    ServerTransferStateModule\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppServerModule {\n  constructor(private injector: Injector, @Inject(PLATFORM_ID) platformId: Object) {\n\n    if (isPlatformBrowser(platformId)) {\n     // const { createCustomElement } = require('@angular/elements');\n      // you can use createCustomElement here\n     // const homeElement = createCustomElement(HomeComponent, { injector });\n\n      //customElements.define('home-comp', homeElement);\n    }\n\n  }\n\n  ngDoBootstrap() { }\n}\n","<div class=\"comp1\">\n    <div class=\"home-img\">\n        <img src=\"{{'../../assets'+inputData.titleimage}}\" alt=\"Home\" />\n        <h1 class=\"title\">{{inputData.title}}</h1>\n        <div>{{inputData.desc}}</div>\n        <button class=\"btn\">{{inputData.buttontext}}</button>\n    </div>        \n  </div>\n\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'comp-1',\n    templateUrl: './comp-1.component.html'\n})\nexport class Comp1 implements OnInit {\n\n    inputData: any;\n    constructor() {\n\n    }\n\n    ngOnInit() {\n    }\n\n}\n","<div class=\"comp2\">\n    <div>\n        <h1 class=\"title\">{{inputData.title}}</h1>\n        <div>\n          <div *ngFor=\"let item of inputData.columnsArr\" class=\"sub-section\">\n            <h3>{{item.title}}</h3>\n            <div>{{item.desc}}</div>\n          </div>                      \n      </div>\n    </div>        \n  </div>","import {Component, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'comp-2',\n    templateUrl: './comp-2.component.html'\n})\nexport class Comp2 implements OnInit {\n\n    inputData: any;\n    constructor() {\n\n    }\n\n    ngOnInit() {\n        //debugger;\n    }\n\n}\n","<div [innerHTML]=\"txtContent\"></div>\n","import {Component, OnInit, Input} from '@angular/core';\n\n@Component({\n    selector: 'html-content-comp',\n    templateUrl: './html-content.comp.html',\n    styleUrls: ['./html-content.comp.css']\n})\nexport class HtmlContentComponent implements OnInit {\n\n    @Input() inputData: any;\n    public txtContent:string;\n    constructor() {\n\n    }\n\n    ngOnInit() {\n        this.txtContent = this.inputData.tvalue;\n    }\n\n}\n","<template #messagecontainer>\n</template>\n\n","import {Component, OnInit, ViewChild,\n    ViewContainerRef, Inject,PLATFORM_ID,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ComponentFactory} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { isPlatformServer } from '@angular/common';\nimport { Title, TransferState, makeStateKey } from '@angular/platform-browser';\nimport { Comp1} from '../comp-1/comp-1.component';\nimport { Comp2} from '../comp-2/comp-2.component';\n\nimport { HtmlContentComponent} from '../html-content/html-content.comp';\nimport { CMSService } from '../services/cms.services';\n\n\nconst CMSAPI_KEY = makeStateKey('cmsapi');\n\n@Component({\n    selector: 'main-root',\n    templateUrl: './main-root.component.html',\n    styleUrls: ['./main-root.component.css']\n})\nexport class MainRootComponent implements OnInit {\n\n    componentRef: any;\n    componentRef2: any;\n    currentURL: string = '';\n    cmsAPI: any;\n    private isServer: boolean;\n  \n    @ViewChild('messagecontainer', { read: ViewContainerRef }) entry: ViewContainerRef;\n\n    constructor(private router: Router, private _CMSService: CMSService, private title:Title, \n                private resolver: ComponentFactoryResolver, private tstate: TransferState, @Inject(PLATFORM_ID) platformId) {\n        this.isServer = isPlatformServer(platformId);\n        this.router.events.subscribe((currentRoute) => {\n            if(this.currentURL !== this.router.url) {\n                console.log( this.router.url); \n                this.currentURL = this.router.url;\n            }                     \n        })\n    }\n\n    ngOnInit() { \n        const _that = this;\n\n        if (this.tstate.hasKey(CMSAPI_KEY)) {\n            // We are in the browser\n            const data = this.tstate.get(CMSAPI_KEY, '');\n            this.render(data);\n        } else {\n            this.callAPI();\n        }\n    }\n    callAPI(){\n        const _that = this;\n        this._CMSService.loadCMSData(this.router.url)\n        .subscribe(data => {\n            \n            this.title.setTitle('Homepage');                \n            _that.tstate.set(CMSAPI_KEY, data as any);\n            _that.render(data);\n        });\n    }\n    render(data){\n        if(data && data.compArr){\n            for(let i=0;i<data.compArr.length;i++) {\n                console.log(data.compArr[i].componenttype)\n                if(data.compArr[i].componenttype === 'Comp1'){\n                    this.createComponent(Comp1, data.compArr[i].data);\n                }if(data.compArr[i].componenttype === 'Comp2'){\n                    this.createComponent(Comp2, data.compArr[i].data);\n                }else{\n                    this.createComponent(HtmlContentComponent, data.compArr[i].data);\n                }\n            }\n        }\n    }\n    createComponent(componenttype, data) {\n        const factory = this.resolver.resolveComponentFactory(componenttype);\n        this.componentRef = this.entry.createComponent(factory);\n        this.componentRef.instance.inputData = data;\n    }\n    destroyComponent() {\n        this.componentRef.destroy();\n    }\n\n}\n","import {Injectable} from \"@angular/core\";\nimport {HttpClient, HttpParams} from \"@angular/common/http\";\nimport {Observable} from \"rxjs/Observable\";\nimport {map} from 'rxjs/operators';\nimport { RequestOptions } from \"@angular/http\";\n\n\n@Injectable()\nexport class CMSService {\n\n    static readonly API_URL = 'http://localhost:3000/getCMSData';\n\n    constructor(private http: HttpClient) {\n\n    }\n\n    loadCMSData(url: string): any {\n\n        return this.http.get(`${CMSService.API_URL}`, { params: {reqURL: url }})\n    }\n}","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\n\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nexport { AppServerModule } from './app/app.server.module';\n","module.exports = require(\"@angular/animations\");","module.exports = require(\"@angular/animations/browser\");","module.exports = require(\"@angular/common\");","module.exports = require(\"@angular/common/http\");","module.exports = require(\"@angular/core\");","module.exports = require(\"@angular/elements\");","module.exports = require(\"@angular/forms\");","module.exports = require(\"@angular/http\");","module.exports = require(\"@angular/platform-browser\");","module.exports = require(\"@angular/platform-browser/animations\");","module.exports = require(\"@angular/platform-server\");","module.exports = require(\"@angular/router\");"],"sourceRoot":""}